plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.teaminternational'
version = '0.1.0-POC'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('testcontainersVersion', "1.17.6")
    set('apacheCxfVersion', "3.3.2")
    set('springAwsVersion', "3.0.0-M2")
    set('optaplannerVersion', '9.44.0.Final')
}


dependencies {
    implementation platform("org.optaplanner:optaplanner-bom:${optaplannerVersion}")

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.optaplanner:optaplanner-spring-boot-starter"
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.liquibase:liquibase-core'

    compileOnly 'org.projectlombok:lombok'

    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation("org.optaplanner:optaplanner-test")
}

tasks.named('test') {
    useJUnitPlatform()
}
